# Generated by Django 4.2.7 on 2025-09-30 18:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('verified_artists', models.PositiveIntegerField(default=0)),
                ('total_songs', models.PositiveIntegerField(default=0)),
                ('new_songs', models.PositiveIntegerField(default=0)),
                ('approved_songs', models.PositiveIntegerField(default=0)),
                ('pending_songs', models.PositiveIntegerField(default=0)),
                ('rejected_songs', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('daily_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_payouts', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('daily_payouts', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('platform_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('bronze_subscribers', models.PositiveIntegerField(default=0)),
                ('gold_subscribers', models.PositiveIntegerField(default=0)),
                ('platinum_subscribers', models.PositiveIntegerField(default=0)),
                ('free_users', models.PositiveIntegerField(default=0)),
                ('total_tickets', models.PositiveIntegerField(default=0)),
                ('open_tickets', models.PositiveIntegerField(default=0)),
                ('resolved_tickets', models.PositiveIntegerField(default=0)),
                ('api_requests', models.PositiveIntegerField(default=0)),
                ('upload_requests', models.PositiveIntegerField(default=0)),
                ('download_requests', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Platform Analytics',
                'verbose_name_plural': 'Platform Analytics',
                'db_table': 'platform_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('setting_type', models.CharField(choices=[('commission', 'Commission Rate'), ('upload_limit', 'Upload Limit'), ('file_size_limit', 'File Size Limit'), ('feature_flag', 'Feature Flag'), ('maintenance', 'Maintenance Mode'), ('email_template', 'Email Template'), ('platform_fee', 'Platform Fee')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_settings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'db_table': 'system_settings',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='BulkNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('recipient_type', models.CharField(choices=[('all', 'All Users'), ('artists', 'All Artists'), ('subscribers', 'All Subscribers'), ('free_users', 'Free Users'), ('specific_plan', 'Specific Subscription Plan'), ('custom', 'Custom Selection')], max_length=20)),
                ('recipient_filter', models.JSONField(blank=True, default=dict)),
                ('send_email', models.BooleanField(default=True)),
                ('send_push', models.BooleanField(default=True)),
                ('send_in_app', models.BooleanField(default=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('successful_sends', models.PositiveIntegerField(default=0)),
                ('failed_sends', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bulk Notification',
                'verbose_name_plural': 'Bulk Notifications',
                'db_table': 'bulk_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('user_create', 'User Created'), ('user_update', 'User Updated'), ('user_delete', 'User Deleted'), ('user_verify', 'User Verified'), ('user_suspend', 'User Suspended'), ('song_approve', 'Song Approved'), ('song_reject', 'Song Rejected'), ('song_delete', 'Song Deleted'), ('payment_process', 'Payment Processed'), ('payment_refund', 'Payment Refunded'), ('notification_send', 'Notification Sent'), ('settings_update', 'Settings Updated'), ('bulk_action', 'Bulk Action')], max_length=50)),
                ('target_model', models.CharField(max_length=50)),
                ('target_id', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Action',
                'verbose_name_plural': 'Admin Actions',
                'db_table': 'admin_actions',
                'ordering': ['-created_at'],
            },
        ),
    ]
