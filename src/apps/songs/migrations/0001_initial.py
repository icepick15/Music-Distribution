# Generated by Django 5.2.5 on 2025-09-07 08:42

import django.db.models.deletion
import src.apps.songs.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'genres',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='platform_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('revenue_share', models.DecimalField(decimal_places=2, default=70.0, help_text='Platform revenue share percentage', max_digits=5)),
            ],
            options={
                'db_table': 'platforms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('featured_artists', models.CharField(blank=True, help_text='Comma-separated list of featured artists', max_length=500, null=True)),
                ('release_type', models.CharField(choices=[('single', 'Single'), ('ep', 'EP'), ('album', 'Album'), ('compilation', 'Compilation')], default='single', max_length=20)),
                ('album_title', models.CharField(blank=True, max_length=200, null=True)),
                ('track_number', models.PositiveIntegerField(blank=True, null=True)),
                ('audio_file', models.FileField(blank=True, help_text='Audio file (MP3, WAV, FLAC)', null=True, upload_to=src.apps.songs.models.audio_upload_path)),
                ('cover_image', models.ImageField(blank=True, help_text='Cover art (minimum 1400x1400px)', null=True, upload_to=src.apps.songs.models.cover_upload_path)),
                ('audio_url', models.URLField(blank=True, null=True)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('subgenre', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('composer', models.CharField(blank=True, max_length=200, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('isrc_code', models.CharField(blank=True, help_text='International Standard Recording Code', max_length=12, null=True, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.99, max_digits=10)),
                ('is_explicit', models.BooleanField(default=False)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('approved', 'Approved'), ('distributed', 'Distributed'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('total_streams', models.PositiveIntegerField(default=0)),
                ('total_downloads', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('distributed_at', models.DateTimeField(blank=True, null=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to=settings.AUTH_USER_MODEL)),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='songs.genre')),
            ],
            options={
                'db_table': 'songs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SongDistribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('platform_song_id', models.CharField(blank=True, max_length=200, null=True)),
                ('platform_url', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('live', 'Live'), ('failed', 'Failed'), ('removed', 'Removed')], default='pending', max_length=20)),
                ('distributed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='songs.platform')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='songs.song')),
            ],
            options={
                'db_table': 'song_distributions',
            },
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['artist', 'status'], name='songs_artist__066b8e_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['genre'], name='songs_genre_i_8d6106_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['release_date'], name='songs_release_ab2538_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='songdistribution',
            unique_together={('song', 'platform')},
        ),
    ]
