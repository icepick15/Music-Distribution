services:
  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

    # Django web application
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    environment:
      - DEBUG=1
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped

   # Celery worker
  celery:
    build: .
    volumes:
      - .:/app
      - media_files:/app/media
    environment:
      - DEBUG=1
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    command: celery -A music_distribution_backend worker --pool=threads --loglevel=info
    restart: unless-stopped

  # Frontend 
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - web
    restart: unless-stopped

volumes: 
  media_files:
  static_files: